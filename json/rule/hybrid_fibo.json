{"headers":[{"key":"pos","value":true,"style":"boolean"}],"items":[{"key":"x","value":0,"style":"number","css":"x"},{"key":"left","value":1,"style":"number"},{"key":"right","value":1,"style":"number"},{"key":"expression","value":"","style":"string","css":"o2"},{"key":"sup","value":1,"style":"number","css":"o"}],"priority":[{"key":"status","order":"desc","alter":["win",2,"lose",0,1]},{"key":"sup","order":"desc"}],"actions":[{"name":"○","css":"action_o","button_css":"btn btn-primary btn-lg","keyArray":"k1","tweet":"o","enable0":"return (player.status == 'normal' && !header.playoff);","action0":"// 得点計算\nif (player.left > player.right) {\n  player.right += player.left;\n} else {\n  player.left += player.right;\n}\nsetMotion(player, 'o');\naddQCount(players, header, property);","nowait":false},{"name":"×","css":"action_x","button_css":"btn btn-danger btn-lg","keyArray":"k2","tweet":"x","enable0":"return (player.status == 'normal' && !header.playoff);","action0":"// 得点計算\nif (player.left >= player.right) {\n  player.left = 0;\n} else {\n  player.right = 0;\n}\nplayer.x++;\nsetMotion(player, 'x');\naddQCount(players, header, property);","nowait":false}],"global_actions":[{"name":"thru","button_css":"btn btn-default","group":"rule","keyboard":"Space","tweet":"thru","enable0":"return true;","action0":"addQCount(players, header, property);","nowait":false},{"name":"pos","button_css":"btn btn-default","group":"rule","enable0":"return true;","action0":"header.pos = !header.pos;","keyArray":"","nowait":false}],"global_actions_repeat":[],"tweet":{"o":"${handleName}◯　→${o}◯ ${x}×","x":"${handleName}×　→${o}◯ ${x}×","thru":"スルー"},"judgement":"angular.forEach(players.filter(function(item) {\n  /* rankがない人に限定 */\n  return (item.rank === 0);\n}), function(player, i) {\n  /* win条件 */\n  if (player.sup >= property.winningPoint) {\n\n    win(player, players, header, property);\n    player.combo = 0;\n    timerStop();\n  }\n  /* lose条件 */\n  if (player.x >= property.losingPoint || player.sup === 0) {\n    lose(player, players, header, property);\n    player.combo = 0;\n    timerStop();\n  }\n});","calc":"angular.forEach(players, function(player, index) {\n  // sup, expression\n  player.sup = (player.left >= player.right) ? player.left : player.right;\n  player.imp = (player.left < player.right) ? player.left : player.right;\n  player.expression = \"(\" + player.left + \",\" + player.right + \")\";\n\n  // pinch, chance\n  player.pinch = ((player.x >= property.losingPoint - 1) || (player.imp === 0)) &&\n    (player.status == 'normal');\n  player.chance = ((player.right + player.left) >= property.winningPoint) &&\n    (player.status == 'normal');\n\n  // キーボード入力時の配列の紐付け ローリング等の特殊形式でない場合はこのままでOK\\\n  player.keyIndex = player.position;\n  if (header.pos) {\n    player.line = \"line1\";\n  } else {\n    player.line = \"line2\";\n  }\n});","lines":[{"key":"line1","xType":true,"yType":false,"invisible":false,"zoom":1,"left":0,"right":1,"top":0,"y":0.5,"orderBy":"position"},{"key":"line2","orderBy":"priority","xType":true,"yType":false,"invisible":false,"zoom":1,"left":0,"right":1,"y":0.5}]}