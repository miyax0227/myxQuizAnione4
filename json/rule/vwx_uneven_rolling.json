{"headers":[{"key":"pos","value":true,"style":"boolean"}],"items":[{"key":"o","value":0,"style":"number","css":"o"},{"key":"x","value":0,"style":"number","css":"x"},{"key":"penalty","value":0,"style":"number","css":"penalty"}],"priority":[{"key":"status","order":"desc","alter":["win",2,"lose",0,1]},{"key":"o","order":"desc"},{"key":"x","order":"asc"},{"key":"paperRank","order":"asc"}],"actions":[{"name":"○","css":"action_o","button_css":"btn btn-primary btn-lg","keyArray":"k1","tweet":"o","enable0":"return (player.status == 'selected' && !header.playoff);","action0":"player.o++;\nsetMotion(player, 'o');\n// 自分以外の列をローリング\nfor (var col = 0; col <= header.maxCol; col++) {\n  if (col != player.col) {\n    rolling(players, col);\n  }\n}\naddQCount(players, header, property);","nowait":false},{"name":"×","css":"action_x","button_css":"btn btn-danger btn-lg","keyArray":"k2","tweet":"x","enable0":"return (player.status == 'selected' && !header.playoff);","action0":"player.x++;\nsetMotion(player, 'x');\n// 自分の列をローリング\nrolling(players, player.col);\naddQCount(players, header, property);","nowait":false},{"name":"S","css":"action_s","button_css":"btn btn-info btn-lg","keyArray":"k3","enable0":"return (player.status == 'normal' && !header.playoff);","action0":"// 解答権を自分にする\nplayers.filter(function(p){\n    return (p.col === player.col) && (p.status == \"selected\");\n}).map(function(p){\n    p.status = \"normal\";\n});\nplayer.status = \"selected\";\n","nowait":true}],"global_actions":[{"name":"thru","button_css":"btn btn-default","group":"rule","keyboard":"Space","tweet":"thru","enable0":"return true;","action0":"// すべての列をローリング\nfor (var col = 0; col <= header.maxCol; col++) {\n  rolling(players, col);\n}\naddQCount(players, header, property);","nowait":false}],"global_actions_repeat":[],"tweet":{"o":"${handleName}◯　→${o}◯ ${x}×","x":"${handleName}×　→${o}◯ ${x}×","thru":"スルー"},"judgement":"angular.forEach(players.filter(function(item) {\n  /* rankがない人に限定 */\n  return (item.rank === 0);\n}), function(player, i) {\n  /* win条件 */\n  if (player.o >= property.winningPoint) {\n    // ボタンについていた場合はローリング\n    if (player.status == \"selected\") {\n      rolling(players, player.col);\n    }\n\n    win(player, players, header, property);\n    timerStop();\n\n  }\n  /* lose条件 */\n  if (player.x + player.penalty>= property.losingPoint) {\n    // ボタンについていた場合はローリング\n    if (player.status == \"selected\") {\n      rolling(players, player.col);\n    }\n\n    lose(player, players, header, property);\n    timerStop();\n  }\n});","calc":"header.maxCol = 0;\nangular.forEach(players, function(player, index) {\n  // pinch, chance\n  player.pinch = false;\n  player.chance = false;\n  \n  // nameLatの設定\n  player.nameLat = player.name;\n  player.handleNameLat = player.handleName;\n  player.keyIndex = 999;\n\n  // maxColの設定\n  if (header.maxCol < player.col) {\n    header.maxCol = player.col;\n  }\n  \n  // 残りプレイヤー\n  header.playerCount = players.filter(function(p){\n      return p.status == \"normal\" || p.status == \"selected\";\n  }).length;\n  \n  // 残り枠\n  header.spot = property.maxRankDisplay - players.filter(function(p){\n      return p.status == \"win\";\n  }).length;\n\n  // キーボード入力時の配列の紐付け\n  if (player.status == \"selected\") {\n    player.keyIndex = player.col - 1;\n  } else {\n    player.keyIndex = 999;\n  }\n  player.line = \"line\" + player.row;\n});","lines":[{"key":"line1","xType":true,"yType":false,"invisible":false,"zoom":0.4,"left":0,"right":1,"top":0,"y":0.8,"orderBy":"col"},{"key":"line2","orderBy":"col","xType":true,"yType":false,"invisible":false,"zoom":0.4,"left":0.2,"right":1,"y":0.6},{"key":"line3","orderBy":"col","xType":true,"yType":false,"invisible":false,"zoom":0.4,"y":0.4,"left":0.4,"right":1},{"key":"line4","orderBy":"col","xType":true,"yType":false,"invisible":false,"zoom":0.4,"y":0.2,"left":0.6,"right":1}]}