{"headers":[{"key":"pos","value":true,"style":"boolean"},{"key":"set","value":1,"style":"number"}],"items":[{"key":"pts","value":20,"style":"number","css":"o"},{"key":"x","value":0,"style":"number","css":"x"}],"priority":[{"key":"status","order":"desc","alter":["win",2,"lose",0,1]},{"key":"pts","order":"desc"}],"actions":[{"name":"○","css":"action_o","button_css":"btn btn-primary btn-lg","keyArray":"k1","tweet":"o","enable0":"return (player.status == 'normal' && !header.playoff);","action0":"// ptsを加算\nplayer.pts++;\n// 他プレイヤーのptsを減算\nplayers.map(function(p){\n   if(p !== player && p.status == \"normal\"){\n       p.pts--;\n   } \n});\nsetMotion(player, 'o');\naddQCount(players, header, property);","nowait":false},{"name":"×","css":"action_x","button_css":"btn btn-danger btn-lg","keyArray":"k2","tweet":"x","enable0":"return (player.status == 'normal' && !header.playoff);","action0":"// ×を加算\nplayer.x++;\n// ptsを減算\nplayer.pts -= (player.x + 1);\nsetMotion(player, 'x');\naddQCount(players, header, property);","nowait":false}],"global_actions":[{"name":"thru","button_css":"btn btn-default","group":"rule","keyboard":"Space","tweet":"thru","enable0":"return true;","action0":"addQCount(players, header, property);","nowait":false},{"name":"pos","button_css":"btn btn-default","group":"rule","enable0":"return true;","action0":"header.pos = !header.pos;","keyArray":"","nowait":false},{"name":"reset","button_css":"btn btn-danger","group":"rule","keyboard":"z","enable0":"return true;","action0":"players.map(function(p) {\n  if (p.status == \"normal\" || p.status == \"wait\" || p.status == \"lose\") {\n    p.status = \"normal\";\n    p.pts = property.initPts;\n    p.x = 0;\n  } else if (p.status == \"win\") {\n    p.pts = \"\";\n    p.x = 0;\n  }\n});\nheader.set++;\nheader.qCount = 1;","nowait":false}],"global_actions_repeat":[],"tweet":{"o":"${handleName}◯　→${o}◯ ${x}×","x":"${handleName}×　→${o}◯ ${x}×","thru":"スルー"},"judgement":"angular.forEach(players.filter(function(item) {\n  /* rankがない人に限定 */\n  return (item.rank === 0);\n}), function(player, i) {\n  /* lose(wait)条件 */\n  if (player.pts <= 0) {\n    player.status = \"wait\";\n    player.pts = 0;\n  }\n});\n\nif (players.filter(function(player) {\n    return player.status == \"normal\";\n  }).length == 1) {\n\n  timerStop();\n  var winner = players.filter(function(player) {\n    return player.status == \"normal\";\n  })[0];\n  win(winner, players, header, property);\n}","calc":"angular.forEach(players, function(player, index) {\n  // pinch, chance\n  player.pinch = (player.pts <= player.x + 1) && (player.status == 'normal');\n\n  // キーボード入力時の配列の紐付け ローリング等の特殊形式でない場合はこのままでOK\\\n  player.keyIndex = player.position;\n  if (header.pos) {\n    player.line = \"line1\";\n  } else {\n    player.line = \"line2\";\n  }\n});","lines":[{"key":"line1","xType":true,"yType":false,"invisible":false,"zoom":1,"left":0,"right":1,"top":0,"y":0.5,"orderBy":"position"},{"key":"line2","orderBy":"priority","xType":true,"yType":false,"invisible":false,"zoom":1,"left":0,"right":1,"y":0.5}]}