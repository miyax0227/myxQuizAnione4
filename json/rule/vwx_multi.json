{"headers":[{"key":"variant","value":1,"style":"number"}],"items":[{"key":"pts1","value":1,"style":"number","css":"o3"},{"key":"pts2","value":1,"style":"number","css":"o4"},{"key":"pts3","value":1,"style":"number","css":"o5"},{"key":"pts4","value":1,"style":"number","css":"o6"},{"key":"pts5","value":1,"style":"number","css":"o7"},{"key":"x1","value":0,"style":"number"},{"key":"x2","value":0,"style":"number"},{"key":"x3","value":0,"style":"number"},{"key":"x4","value":0,"style":"number"},{"key":"x5","value":0,"style":"number"},{"key":"pts","css":"o"}],"priority":[{"key":"status","order":"desc","alter":["win",2,"lose",0,1]},{"key":"pts","order":"desc"},{"key":"x","order":"asc"}],"actions":[{"name":"○","css":"action_o","button_css":"btn btn-primary btn-lg","keyArray":"k1","tweet":"o","enable0":"return (player.status == 'normal' && !header.playoff);","action0":"player[\"pts\"+header.variant]++;\nsetMotion(player, 'o');\naddQCount(players, header, property);"},{"name":"×","css":"action_x","button_css":"btn btn-danger btn-lg","keyArray":"k2","tweet":"x","enable0":"return (player.status == 'normal' && !header.playoff);","action0":"player[\"x\"+header.variant]++;\nsetMotion(player, 'x');\naddQCount(players, header, property);"}],"global_actions":[{"name":"thru","button_css":"btn btn-default","group":"rule","keyboard":"Space","tweet":"thru","enable0":"return true;","action0":"addQCount(players, header, property);"},{"name":"α","enable0":"return true;","button_css":"btn btn-default","group":"rule","keyboard":"z","tweet":"mode","action0":"header.variant = 1;\nheader.variantName = \"α\";"},{"name":"β","enable0":"return true;","button_css":"btn btn-default","group":"rule","tweet":"mode","keyboard":"x","action0":"header.variant = 2;\nheader.variantName = \"β\";"},{"name":"γ","enable0":"return true;","button_css":"btn btn-default","group":"rule","tweet":"mode","keyboard":"c","action0":"header.variant = 3;\nheader.variantName = \"γ\";"},{"name":"δ","enable0":"return true;","button_css":"btn btn-default","group":"rule","tweet":"mode","keyboard":"v","action0":"header.variant = 4;\nheader.variantName = \"δ\";"},{"name":"ε","enable0":"return true;","button_css":"btn btn-default","group":"rule","tweet":"mode","keyboard":"b","action0":"header.variant = 5;\nheader.variantName = \"ε\";"}],"global_actions_repeat":[],"tweet":{"o":"${handleName}◯　→${pts1}*${pts2}*${pts3}*${pts4}*${pts5}=${pts} ${x}× ${substatus}","x":"${handleName}×　→${pts1}*${pts2}*${pts3}*${pts4}*${pts5}=${pts} ${x}× ${substatus}","thru":"スルー"},"judgement":"angular.forEach(players.filter(function(item) {\n  /* rankがない人に限定 */\n  return (item.rank === 0);\n}), function(player, i) {\n  /* win条件 */\n  if (player.pts >= property.winningPoint) {\n    win(player, players, header, property);\n  }\n  /* lose条件 */\n  if (player.x >= property.losingPoint) {\n    lose(player, players, header, property);\n  }\n});","calc":"angular.forEach(players, function(player, index) {\n  // pts\n  player.pts = player.pts1 * player.pts2 * player.pts3 * player.pts4 * player.pts5;\n  // x\n  player.x = player.x1 + player.x2 + player.x3 + player.x4 + player.x5;\n  // absent\n  player.absent1 = (player.x1 >= 1);\n  player.absent2 = (player.x2 >= 1);\n  player.absent3 = (player.x3 >= 1);\n  player.absent4 = (player.x4 >= 1);\n  player.absent5 = (player.x5 >= 1);\n\n  // status, select\n  player.select1 = false;\n  player.select2 = false;\n  player.select3 = false;\n  player.select4 = false;\n  player.select5 = false;\n  if ([\"normal\", \"absent\"].indexOf(player.status) >= 0) {\n    if (player[\"x\" + header.variant] >= 1) {\n      player.status = \"absent\";\n      player.absent = 0;\n    } else {\n      player[\"select\" + header.variant] = true;\n      player.status = \"normal\";\n      player.absent = 0;\n    }\n  }\n\n  // pinch, chance\n  player.chance1 = ([\"normal\", \"absent\"].indexOf(player.status) >= 0) && (player.x1 === 0) && ((player.pts1 + 1) * player.pts2 * player.pts3 * player.pts4 * player.pts5 >= property.winningPoint);\n  player.chance2 = ([\"normal\", \"absent\"].indexOf(player.status) >= 0) && (player.x2 === 0) && ((player.pts2 + 1) * player.pts1 * player.pts3 * player.pts4 * player.pts5 >= property.winningPoint);\n  player.chance3 = ([\"normal\", \"absent\"].indexOf(player.status) >= 0) && (player.x3 === 0) && ((player.pts3 + 1) * player.pts1 * player.pts2 * player.pts4 * player.pts5 >= property.winningPoint);\n  player.chance4 = ([\"normal\", \"absent\"].indexOf(player.status) >= 0) && (player.x4 === 0) && ((player.pts4 + 1) * player.pts1 * player.pts2 * player.pts3 * player.pts5 >= property.winningPoint);\n  player.chance5 = ([\"normal\", \"absent\"].indexOf(player.status) >= 0) && (player.x5 === 0) && ((player.pts5 + 1) * player.pts1 * player.pts2 * player.pts3 * player.pts4 >= property.winningPoint);\n\n  player.chance = player[\"chance\" + header.variant];\n  player.pinch =  player.status == \"normal\" && (player.x + 1 >= property.losingPoint);\n  player.substatus = (player.chance && player.pinch) ? \"ダブリー\" : player.chance ? \"リーチ\" : player.pinch ? \"トビリー\" : \"\";\n  \n  // キーボード入力時の配列の紐付け ローリング等の特殊形式でない場合はこのままでOK\\\n  player.keyIndex = player.position;\n  player.line = \"line1\";\n});","lines":[{"key":"line1","xType":true,"yType":false,"invisible":false,"zoom":1,"left":0,"right":1,"top":0,"y":0.6,"orderBy":"position"}]}